Лабораторная работа №2 по дисциплине "Защита информации"
Описание алгоритмов и функций

----------------------------Вспомогательные функции-----------------------------

  DecToBin(dec) - первеодит значение десятичного числа dec в двоичную форму.
Принимает число p (int). Возвращает целое число bin (int)
  isPrime(p) - проверяет, явдяется ли входное занение p простым числом.
Принимает число p (int). Возвращает логическое значение (bool).

 SimpleGenerator() - генерирует простое число p такое, что (p - 1) / 2 - тоже
простое число. Не принимает входныее данные. Возвращает целое число p (int).

 GCD(a, b) - находит наибольшее общее кратное для чисел a и b. Принимает числа
 a и b (int, int). Возвращает целое число (int).

  EuclideAl(a, b) - для заданных a и b находит такие x и y, для которых
выполняется уловие  ax + by = GCD(a, b). Возвращает массив, в котором первое
значение - НОД для a и b, второе и третье - x и y соответсвенно. Принимает на
вход числа a и b, такие что a > b (int, int). Возвращает массив U ([]).

class User - хранит в себе пользовательские данные в момент шифррвания.

----------------------------------Шифр Шамира-----------------------------------

  class ShamirCypher хранит в себе функции для реализации Шифра Шамира

    > Переменная p - один из ключей шифрования, по которому будет находиться
    модуль

    > def keyGenerator(self) - генерирует ключи C и D для пользователя.
    При вызове функции её нужно приравнивать к двум переменным
    (C, D = ShamirCypher.keyGenerator()). Не принимает входные данные.
    Возвращает числа C и D (int, int).

    > def encode(self, a, e) - производит один шаг Шифра Шамира.
    На вход принимает сообщение a и показатель степени e (int, int). Возвращает
    закодированное сообщение (int). После четвёртого шага сообщение
    декодируется.

--------------------------------Шифр Эль-Гамаля---------------------------------

class ElgamalCypher хранит в себе функции для реализации Шифра Эль-Гамаля

    > Переменная p - один из ключей шифрования, по которому будет находиться
    модуль.

    > Переменная g - один из ключей шифрования, равная (p - 1) / 2
    (первообразный корень числа p).

    > def keyGenerator(self) - генерируе ключи C и D для пользователя.
    При вызове функции её нужно приравнивать к двум переменным
    (C, D = ShamirCypher.keyGenerator()). Не принимает входные данные.
    Возвращает числа C и D (int, int).

    > def encode(self, k, d, m) - выполняет шифрованием с помощью Шифра
    Эль-Гамаля. На вход принимает сообщение, число D пользоватлея, ключ k и
    сообщение m (int, int, int). Возвращает закодированное сообщение (int).

    > def decode(self, e, r, c) - декодирует сообщение, закодированное с
    помощью Шифра Эль-Гамаля. На вход принимает закодированное сообщение e,
    ключ k и число C пользователя (int, int, int). Возвращает раскодированное
    сообщение (int).

----------------------------------Шифр Вернама----------------------------------

class VernamCypher хранит в себе функции для реализации Шифра Вернама

    > Переменная p - ключ шифрования, с которым будет производиться операция
    "исключающего или" с сообщением.

    > def encode(self, m) - кодрует сообщение m с помощью Шифра Вернама,
    но предварительно генерирует ключ k такой, что длина его двоичной
    формы равна длине двоичной формы сообщения m. Принимает на вход
    сообщение m (int). Возвращает закодированное сообщение (int).
    Предупреждение - для каждого нового сообщения генерируется новый ключ.
    Если закодировать два сообщения подряд, ключ для первого сообщения будет
    утерян, и его декодирование станет невозможным. Для нормального
    функционирования программы, выполняйте операции шифрования и дешифрования
    поочерёдно.

    > def decode(self, m) - декодирует сообщение m. Принимает на вход
    сообщение m (int). Возвращает раскодированное сообщение (int).

-----------------------------------Шифр RSA-------------------------------------

class RSACypher хранит в себе функции для реализации Шифра RSA

    > Класс не содержит переменные.

    > def keyGenerator(self) - генерирует ключи C, D и N пользователя.
    При вызове функции её нужно приравнивать к трём переменным
    (C, D, N = ShamirCypher.keyGenerator()). Не принимает входные данные.
    Возвращает числа C, D и N пользователя (int, int, int).

    > def encode(self, m, d, N) - шифрует сообщение m с помощью Шифра RSA.
    Принимает на вход сообщение m и числа D и N (int, int, int). Возвращает закодированное
    сообщение (int).

    > def decode (self, e, c, N) - декодирует сообщение e. Принимает на вход
    закодированное сообщение e и числа C и N пользователя (int, int, int). Возаращает
    декодированное сообщение (int)
